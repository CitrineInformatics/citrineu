{
	"id": 1,
	"title": "The LinkMaster Framework",
	"description": "The LinkMaster framework is a tool to assist in the ingestion of historical data. This guide contains complete LinkMaster documentation.",
	"auth_required": false,
	"sections": [{
			"id": 1,
            "title": "Getting Started",
            "description": "Get to know the LinkMaster framework. In this section you'll learn about the basic file structure of a LinkMaster document, and also find an example file.",
			"documents": [{
					"id": 1,
					"title": "Basic File Structure",
					"content": "The LinkMaster Framework has been designed to store information about materials, how they were made, and their properties.\n\nThis can be done by using recognized keywords in the column headers, and entering data into those columns.\nThis Framework heavily parallels [GEMD](https://citrineinformatics.github.io/citrine-python/getting_started/data_model.html), Citrine's data model.\n\nA LinkMaster File is an Excel workbook where each Process or Measurement is represented in different sheet (tab) within the workbook.\nThe cells in the first row of each sheet contain header names, and the cells in the subsequent rows contain information regarding that Process or Measurement that corresponds with the column headers. "
				},
				{
					"id": 2,
					"title": "Example File",
					"content": "To see an example file, please click [here](https://github.com/CitrineInformatics/linkmaster/blob/master/examples/Book1.xlsx)."
                },
                {
                    "id": 3,
                    "title": "Known Limitations",
                    "content": "Currently there is no way to associate multiple Process Run or Measurement Runs to the same Process Spec or Measurement Spec, respectively. *The LinkMaster framework always assumes a 1:1 relationship between Run and Spec.*\n\nOnly Run Objects can hold Notes, File Links, UIDs, and Attribute Origin.\n\nNames and Tags are shared between Runs and Specs for all Objects and Names are shared for Attributes between Specs and Runs.\n\n[MaterialSpec](https://citrineinformatics.github.io/citrine-python/reference/citrine.resources.material_spec.html#citrine.resources.material_spec.MaterialSpec) objects cannot store any attribute information. \n\nYou cannot link files to Ingredients."
                }
			]
		},
		{
			"id": 2,
            "title": "Recognized Keywords",
            "description": "Column headers are how a LinkMaster file works. They can only be chosen from the list of known keywords. Some keywords are required, and some are optional. Explore this section to find the details you need.",
			"documents": [
                {
					"id": 1,
					"title": "General Format",
					"content": "General header format:\nKEYWORD: detail"
				},
				{
					"id": 2,
					"title": "Allowed *only* in Processes",
					"content": "- INPUT MATERIALS UIDS: LinkMaster ID (special)\n- INGREDIENT AMOUNTS SPEC: unit or type\n- INGREDIENT AMOUNTS RUN: unit or type\n- INGREDIENT LABELS\n- INGREDIENT NAMES\n- PROCESS NAME\n- PROCESS TEMPLATE: custom uid name or \"id\" (default)\n- PROCESS FILE LINKS\n- PROCESS NOTES\n- PROCESS TAGS\n- PROCESS DATE\n- PROCESS OPERATOR\n- PROCESS UID: custom uid name\n- OUTPUT MATERIAL UID: custom uid name\n- OUTPUT MATERIAL NAME\n- OUTPUT MATERIAL TEMPLATE: custom uid name or \"id\" (default)\n- OUTPUT MATERIAL TAGS\n- OUTPUT MATERIAL NOTES\n- OUTPUT MATERIAL TYPE\n- OUTPUT MATERIAL FILE LINKS\n"
				},
				{
					"id": 3,
					"title": "Allowed *only* in Measurements",
					"content": "- INPUT MATERIAL UID: LinkMaster ID (special)\n- MEASUREMENT NAME\n- MEASUREMENT TEMPLATE: custom uid name or \"id\" (default)\n- MEASUREMENT FILE LINKS\n- MEASUREMENT NOTES\n- MEASUREMENT TAGS\n- MEASUREMENT DATE\n- MEASUREMENT OPERATOR\n- MEASUREMENT UID: custom uid name\n- PROPERTY TEMPLATE: custom uid name or \"id\" (default)\n- PROPERTY NAME\n- PROPERTY NOTES\n- PROPERTY FILE LINKS\n- PROPERTY ORIGIN\n- PROPERTY VALUE RUN: unit or type\n"
				},
				{
					"id": 4,
					"title": "Allowed in *both* Processes and Measurements",
					"content": "- PARAMETER NAME\n- PARAMETER TEMPLATE: custom uid name or \"id\" (default)\n- PARAMETER NOTES\n- PARAMETER FILE LINKS \n- PARAMETER ORIGIN \n- PARAMETER VALUE SPEC: unit or type\n- PARAMETER VALUE RUN: unit or type\n- CONDITION NAME\n- CONDITION TEMPLATE: custom uid name or \"id\" (default)\n- CONDITION NOTES\n- CONDITION FILE LINKS\n- CONDITION ORIGIN\n- CONDITION VALUE SPEC: unit or type\n- CONDITION VALUE RUN: unit or type\n"
				},
				{
					"id": 5,
                    "title": "Keyword Details",
                    "content": "Below are the details for each recognized keyword that can be used in a column header.",
					"arguments": [
                        {
							"name": "PARAMETER NAME",
							"description": "The Parameter Name should contain the name of the Parameter. The name of the Parameter will be the same for the corresponding Object's Spec and Run. ",
							"style": "string",
							"type": "string",
							"optional": false,
                            "notes": "A Parameter Name column is necessary to add a Parameter to a Measurement or Process. The Parameter information (e.g Parameter Notes, Parameter File Links, etc.) supplied to the *right* of the `Parameter Name` column(s) are associated with this Parameter. A **new** Parameter can be started by supplying another Parameter Name column.",
                            "example":"| PARAMETER NAME |\n| -------------- |\n| Maximum Temperature |"
						},
						{
							"name": "PARAMETER TEMPLATE: custom uid name or \"id\"",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Parameter Template should contain a unique ID of the Parameter's Template. If this column is not present or if the field is empty, the Parameter is assumed to not have a Parameter Template. The detail provided after the colon allows you to specify [*which* unique ID to reference (the scope)](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/); if nothing is provided here it defaults to the Citrine Platform UUID.",
                            "example": "PARAMETER TEMPLATE: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nPARAMETER TEMPLATE|\n------------------|\n725892-v44f3-34t34f-45t45g4|"
						},
						{
							"name": "PARAMETER NOTES",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Parameter Notes should contain free-style text about the Parameter. This will only be recorded in the corresponding Run.",
"                           example": "PARAMETER NOTES|\n---------------|\nThe instrument knob was super wobbly, so it may not have been set correctly.|"
						},
						{
							"name": "PARAMETER FILE LINKS",
							"style": "list",
							"type": "list of strings",
							"optional": true,
                            "description": "The Parameter File Links should contain the filename(s) of file(s) you would like to associate with this Parameter.",
                            "notes": "These must be in the same directory as the LinkMaster File (relative paths are not supported). Multiple files can be added by using a comma to separate file names. This will only be recorded in the corresponding Object Run.",
                            "example": "PARAMETER FILE LINKS|\n---------------|\n20191027_info.txt, 2018_inst_calib.csv|\n\nPARAMETER FILE LINKS|\n---------------|\n20190916_output.csv|"
						},
						{
							"name": "PARAMETER ORIGIN",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Parameter Origin should contain the origin of said Parameter. The Value must be one of \u201cmeasured\u201d, \u201cpredicted\u201d, \u201csummary\u201d, \u201cspecified\u201d, \u201ccomputed\u201d, or \u201cunknown.\u201d Default is \u201cunknown.\u201d This will only be recorded in the corresponding Object Run.",
                            "example": "PARAMETER ORIGIN|\n---------------|\nmeasured|"
						},
						{
							"name": "PARAMETER VALUE SPEC: unit or type",
							"style": "value",
							"type": "value:unit/type",
							"optional": true,
							"description": "The Parameter Value Spec should contain the value of the *spec* of that parameter. Units or value type can be provided after a colon, but default to unitless. [Please see value types for more information](#Value-Types).",
                            "example": "PARAMETER VALUE SPEC: g|\n---------------|\n4.5|\n\nPARAMETER VALUE SPEC|\n---------------|\n5.8 \u00b1 0.4|\n\nPARAMETER VALUE SPEC: categorical|\n---------------|\nconvention|"
						},
						{
							"name": "PARAMETER VALUE RUN: unit or type",
							"style": "value",
							"type": "string",
							"optional": true,
							"description": "The Parameter Value Spec should contain the value of the *run* of that parameter. Units or value type can be provided after a colon, but default to unitless. [Please see value types for more information](#Value-Types).",
                            "example": "PARAMETER VALUE RUN: g|\n---------------|\n4.6|\n\nPARAMETER VALUE RUN|\n---------------|\n5.7 \u00b1 0.3|\n\nPARAMETER VALUE RUN: categorical|\n---------------|\nconvention|"
						},
						{
							"name": "CONDITION NAME",
							"style": "string",
							"type": "string",
							"optional": true,
                            "description": "The Condition Name should contain the name of the Condition. The name of the Condition will be the same for the corresponding Object's Spec and Run.",
                            "notes":"A Condition Name column is necessary to add a Parameter to a Measurement or Process. The Condition information (e.g Condition Notes, Condition File Links, etc.) supplied to the *right* of the Condition Name column(s) are associated with this Condition. A **new** Condition can be started by supplying another Condition Name column.",
                            "example": "CONDITION NAME|\n--------------|\nMaximum Temperature|"
						},
						{
							"name": "CONDITION TEMPLATE: custom uid name or \"id\"",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Condition Template should contain a unique ID of the Condition's Template. If this column is not present or if the field is empty, the Condition is assumed to not have a Condition Template. The detail provided after the colon allows you to specify [*which* unique ID to reference (the scope)](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/); if nothing is provided here it defaults to the Citrine Platform UUID.",
                            "example": "CONDITION TEMPLATE: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nCONDITION TEMPLATE|\n------------------|\n725892-v44f3-34t34f-45t45g4|"
						},
						{
							"name": "CONDITION NOTES",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Condition Notes should contain free-style text about the Condition. This will only be recorded in the corresponding Run.",
                            "example": "CONDITION NOTES|\n---------------|\nThe thermocouple reading the Max Temp was being finicky. Not sure how much I trust this value.|"
						},
						{
							"name": "CONDITION FILE LINKS",
							"style": "string",
							"type": "string",
							"optional": true,
                            "description": "The Condition File Links should contain the filename(s) of file(s) you would like to associate with this Condition.",
                            "notes":"These must be in the same directory as the LinkMaster File (relative paths are not supported). Multiple files can be added by using a comma to separate file names. This will only be recorded in the corresponding Run.",
                            "example": "CONDITION FILE LINKS|\n---------------|\n20191027_info.txt, 2018_inst_calib.csv|\n\nCONDITION FILE LINKS|\n---------------|\n20190916_output.csv|"
						},
						{
							"name": "CONDITION ORIGIN",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Condition Origin should contain the origin of said Condition. The Value must be one of \u201cmeasured\u201d, \u201cpredicted\u201d, \u201csummary\u201d, \u201cspecified\u201d, \u201ccomputed\u201d, or \u201cunknown.\u201d Default is \u201cunknown.\u201d This will only be recorded in the corresponding Run.",
                            "example": "CONDITION ORIGIN|\n---------------|\nmeasured|"
						},
						{
							"name": "CONDITION VALUE SPEC: unit or type",
							"style": "value",
							"type": "string",
							"optional": true,
							"description": "The Condition Value Spec should contain the value of the *spec* of that Condition. Units or value type can be provided after a colon, but default to unitless. [Please see value types for more information](#Value-Types).",
                            "example": "CONDITION VALUE SPEC: g|\n---------------|\n4.5|\n\nCONDITION VALUE SPEC|\n---------------|\n5.8 \u00b1 0.4|\n\nCONDITION VALUE SPEC: categorical|\n---------------|\nconvention|"
						},
						{
							"name": "CONDITION VALUE RUN: unit or type",
							"style": "value",
							"type": "string",
							"optional": true,
							"description": "The Condition Value Run should contain the value of the *run* of that Condition. Units or value type can be provided after a colon, but default to unitless. [Please see value types for more information](###Value-Types).",
                            "example": "CONDITION VALUE RUN: g|\n---------------|\n4.5|\n\nCONDITION VALUE RUN|\n---------------|\n5.8 \u00b1 0.4|\n\nCONDITION VALUE RUN: categorical|\n---------------|\nconvention|"
						},
						{
							"name": "INPUT MATERIALS UIDS: LinkMaster ID",
							"style": "list",
							"type": "string",
							"optional": false,
                            "description": "The `Input Materials UID` Column should contain the unique LinkMaster IDs of the Materials entering a Process. [For denoting a Material in a Measurement, please see below](#input-material-uid-linkmaster-id). This is one of the *required* columns for a Process (unless the process is an originating process such as a purchasing Process). **The information in this column also dictates the order of ingredients, which is relevant to ingredient columns**. For example, if a list of three `INPUT MATERIAL UIDS` is provided herein, three `INGREDIENT AMOUNTS` and `INGREDIENT LABELS` would be expected if provided.",
                            "notes": "The `scope` for this column must be `LinkMaster ID`. Also note that it is allowed to have one Material in with no comma delimiter.",
                            "example":"INPUT MATERIALS UIDS: LinkMaster ID|\n------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2, 423904790-grgf34r3-r432f42f42-3r23rf43f423|\n\nINPUT MATERIALS UIDS: LinkMaster ID|\n------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2|"
						},
						{
							"name": "INGREDIENT AMOUNTS SPEC: unit or type",
							"style": "value",
							"type": "string",
							"optional": true,
							"description": "The Ingredient Amounts Spec Column should contain the spec'd *amount* of each input material. The length of the list provided *must* match the length of the row's `INPUT MATERIALS UIDS: LinkMaster ID` list.\n\nThe detail provided after the colon allows you to specify the unit for an absolute quantity. Special allowed units for Ingredients are: `mass fraction`, `volume fraction`, and `number fraction`. More on these special units [here.](https://citrineinformatics.github.io/citrine-python/reference/citrine.resources.ingredient_spec.html)",
                            "example": "INPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT AMOUNTS SPEC: g|\n------------------------------|--------------------|\nbusiness_unit_389h_bd2b_93, business_unit_389h_b633_67| 5.5, 0.8|\n\nINPUT MATERIALS UIDS: LinkMaster ID|INGREDIENT AMOUNTS SPEC: mass fraction|\n------------------|--------------------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2, 423904790-grgf34r3-r432f42f42-3r23rf43f423| 0.25, 0.75|\n\nINPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT AMOUNTS SPEC: kg|\n------------------|--------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2| 60"
						},
						{
							"name": "INGREDIENT AMOUNTS RUN: unit or type",
							"style": "value",
							"type": "string",
							"optional": true,
							"description": "The Ingredient Amounts Spec Column should contain the actual (run) *amount* of each input material. The length of the list provided *must* match the length of the row's `INPUT MATERIALS UIDS: LinkMaster ID` list, but there can be empty values in the list.\n\nThe detail provided after the colon allows you to specify the unit for an absolute quantity. Special allowed units for Ingredients are: `mass fraction`, `volume fraction`, and `number fraction`. More on these special units [here.](https://citrineinformatics.github.io/citrine-python/reference/citrine.resources.ingredient_run.html)",
"example": "INPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT AMOUNTS RUN: g|\n------------------------------|--------------------|\nbusiness_unit_389h_bd2b_93, business_unit_389h_b633_67| 5.5, 0.8|\n\nINPUT MATERIALS UIDS: LinkMaster ID|INGREDIENT AMOUNTS RUN: mass fraction|\n------------------|--------------------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2, 423904790-grgf34r3-r432f42f42-3r23rf43f423| 0.25, 0.75|\n\nINPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT AMOUNTS RUN: kg|\n------------------|--------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2| 60"
						},
						{
							"name": "INGREDIENT LABELS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Ingredient Labels Column should contain the labels you would like to associate to each Ingredient. The length of the list provided *must* match the length of the row's `INPUT MATERIALS UIDS: LinkMaster ID` list, but there can be empty values in the list.",
"example": "INPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT LABELS|\n------------------------------|--------------------|\nbusiness_unit_389h_bd2b_93, business_unit_389h_b633_67| catalyst, solvent|\n\nINPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT LABELS|\n------------------|--------------------------------|\n725892-v44f3-34t34f-45t45g4-rff43gf5f2, 423904790-grgf34r3-r432f42f42-3r23rf43f423, 8734897-5g45g45v-h87fg3f67g43-43f4f34| slurry, ,dispersant|"
						},
						{
							"name": "INGREDIENT NAMES",
							"style": "list",
							"type": "string",
							"optional": false,
							"description": "The Ingredient Names Column should contain the name(s) you would like to call to each Ingredient. The length of the list provided *must* match the length of the row's `INPUT MATERIALS UIDS: LinkMaster ID` list. The `Ingredient Names` column is one of the *required* column headers in a Process tab (unless it is a Process that instantiates a Material such as a Purchasing Process).",
"example": "INPUT MATERIALS UIDS: LinkMaster ID| INGREDIENT NAMES|\n------------------------------|--------------------|\nbusiness_unit_389h_bd2b_93, business_unit_389h_b633_67| platinum, water|"
						},
						{
							"name": "PROCESS NAME",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Process Name should contain the name of the Process. **This is a mandatory field for Process Tabs**.",
"example": "PROCESS NAME|\n------------------------------|\ndegassing|"
						},
						{
							"name": "PROCESS TEMPLATE: custom uid name or \"id\"",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Process Template should contain the unique ID of the Process's Template. If this column is not present or if the field is empty, the Process is assumed to not have a Process Template.  The detail provided after the colon allows you to specify [*which* unique ID to reference (the scope)](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/); if nothing is provided here it defaults to the Citrine Platform UUID.",
"example": "PROCESS TEMPLATE: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nPROCESS TEMPLATE|\n------------------|\n725892-v44f3-34t34f-45t45g4|"
						},
						{
							"name": "PROCESS UID: custom uid name",
							"style": "string",
							"type": "string",
							"optional": true,
                            "description": "The Process UID Column should contain the Unique ID of the Process. The detail provided after the colon allows you to specify *which* unique ID to reference (the scope). You can read more about UID scopes [here](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/).", 
                            "notes":"Note that you cannot use the scope of `id` here, as this is reserved for the Citrine Platform. Multiple Process UID columns can be specified, but each must have a different UID name (scope).",
"example": "PROCESS UID: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93|"
						},
						{
							"name": "PROCESS FILE LINKS",
							"style": "list",
							"type": "string",
							"optional": true,
                            "description": "The Process File Links should contain the filename(s) of file(s) you would like to associate with this Process.", 
                            "notes": "These must be in the same directory as the LinkMaster File (relative paths are not supported). Multiple files can be added by using a comma to separate file names.",
"example": "PROCESS FILE LINKS|\n---------------|\n20191027_info.txt, 2018_inst_calib.csv|\n\nPROCESS FILE LINKS|\n---------------|\n20190916_output.csv|"
						},
						{
							"name": "PROCESS NOTES",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Process Notes should contain free-style text about the Process.",
"example": "PROCESS NOTES|\n---------------|\nThis was the first time I ran this process, so I may have messed it up.|"
						},
						{
							"name": "PROCESS TAGS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Process Tags should contain tags you would like to associate with the Process. Read more about tags [here.](https://citrineinformatics.github.io/taurus-documentation/specification/tags/)",
"example": "PROCESS TAGS|\n---------------|\noven_firing::BlueM, oven_firing::dry|"
						},
						{
							"name": "PROCESS DATE",
							"style": "date",
							"type": "string",
							"optional": true,
							"description": "The Process Date should contain the date on which the process was started. Please use `MM/DD/YYYY` syntax.",
"example": "PROCESS DATE|\n---------------|\n09/16/2019|"
						},
						{
							"name": "PROCESS OPERATOR",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Process Operator should contain the name of the person who performed the process.",
"example": "PROCESS OPERATOR|\n---------------|\nLenore Kubie|"
						},
						{
							"name": "OUTPUT MATERIAL UID: custom uid name",
							"style": "string",
							"type": "string",
							"optional": false,
                            "description": "The `Output Material UID` Column should contain the Unique ID of the Material produced from the Process described in that Process Tab. This is one of the *required* columns for a Process. The detail provided after the colon allows you to specify *which* unique ID to reference (the scope). You **must** have one `Output Material UID` column with the `scope` of `LinkMaster ID` in every Process Tab. You can assign the output Material Run a custom UID by supplying additional `Output Material UID` columns with different `scopes`. You can read more about UID scopes [here](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/).", "notes": "You cannot use the scope of `id` here, as this is reserved for the Citrine Platform. Multiple Output Material UID columns can be specified, but each must have a different UID scope (detail).",
                            "example": "OUTPUT MATERIAL UID: LinkMaster ID|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nOUTPUT MATERIAL UID: LinkMaster ID| OUTPUT MATERIAL UID: my custom scope name\n------------------------------|---------------------------|\nbusiness_unit_389h_bd2b_93 | cookie_7b87209f09f|"
						},
						{
							"name": "OUTPUT MATERIAL TEMPLATE: custom uid name or \"id\"",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The `Output Material Template` column should contain the unique ID of the Output Material's Material Template. If this column is not present or if the field is empty, the output  Material is assumed to not have a Material Template. The detail provided after the colon allows you to specify [*which* unique ID to reference (the scope)](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/); if nothing is provided here it defaults to the Citrine Platform UID.",
                            "example": "OUTPUT MATERIAL TEMPLATE: custom material template id name|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nOUTPUT MATERIAL TEMPLATE|\n------------------|\n725892-v44f3-34t34f-45t45g4|"
						},
						{
							"name": "OUTPUT MATERIAL NAME",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Output Material Name should contain the name of the Output Material. *This is one of the mandatory columns in a Process tab.*",
"example": "OUTPUT MATERIAL NAME|\n------------------------------|\nNaCl Sample 3729289|"
						},
						{
							"name": "OUTPUT MATERIAL TAGS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Output Material Tags should contain tags you would like to associate with the Output Material. Read more about tags [here](https://citrineinformatics.github.io/taurus-documentation/specification/tags/)",
"example": "OUTPUT MATERIAL TAGS|\n---------------|\nSalt::NaCl, Sodium_Chloride|"
						},
						{
							"name": "OUTPUT MATERIAL NOTES",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Output Material Notes should contain free-style text about the Output Material from a Process.",
"example": "OUTPUT MATERIAL NOTES|\n---------------|\nThe material looked like a different color than normal.|"
						},
						{
							"name": "OUTPUT MATERIAL TYPE",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Output Material Type column is where you can record the form of this sample. Options are \"experimental\", \"virtual\", \"production\", or \"unknown.\" Default is \"unknown.\"",
"example": "OUTPUT MATERIAL TYPE|\n--------------------|\nexperimental|"
						},
						{
							"name": "OUTPUT MATERIAL FILE LINKS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Output Material File Links column should contain the filename(s) of file(s) you would like to associate with this Output Material. Note these must be in the same directory as the LinkMaster File (relative paths are not supported). Multiple files can be added by using a comma to separate file names.",
"example": "OUTPUT MATERIAL FILE LINKS|\n---------------|\n20191027_info.txt, 2018_inst_calib.csv|\n\nOUTPUT MATERIAL FILE LINKS|\n---------------|\n20190916_output.csv|"
						},
						{
							"name": "INPUT MATERIAL UID: LinkMaster ID",
							"style": "string",
							"type": "string",
							"optional": false,
							"description": "The Input Material UID column should contain the unique LinkMaster ID of the Material entering a Measurement. [For denoting Materials in a Process, please see](#input-materials-uids-linkmaster-id). This is one of the *required* columns for a Measurement. The `scope` **must** be `LinkMaster ID` for this column. You can read more about UID scopes [here](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/).",
"example": "INPUT MATERIAL UID: LinkMaster ID|\n------------------------------|\nbusiness_unit_389h_bd2b_93|"
						},
						{
							"name": "MEASUREMENT NAME",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Measurement Name column should contain the name of the Measurement. *This is one of the mandatory columns in a Measurement Tab.*",
"example": "MEASUREMENT NAME|\n------------------------------|\n3-point probe|"
						},
						{
							"name": "MEASUREMENT TEMPLATE: custom uid name or \"id\"",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Measurement Template column should contain the unique ID of the Measurement's Template. The detail provided after the colon allows you to specify [*which* unique ID to reference (the scope)](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/); if nothing is provided here it defaults to the Citrine Platform UID.",
"example": "MEASUREMENT TEMPLATE: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nMEASUREMENT TEMPLATE|\n------------------|\n725892-v44f3-34t34f-45t45g4|"
						},
						{
							"name": "MEASUREMENT DATE",
							"style": "date",
							"type": "string",
							"optional": true,
							"description": "The Measurement Date should contain the date on which the Measurement was started. Please use `MM/DD/YYYY` syntax.",
"example": "MEASUREMENT DATE|\n---------------|\n09/16/2019|"
						},
						{
							"name": "MEASUREMENT OPERATOR",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Measurement Operator should contain the name of the person who performed the Measurement.",
"example": "MEASUREMENT OPERATOR|\n---------------|\nLenore Kubie|"
						},
						{
							"name": "MEASUREMENT UID",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Measurement UID Column should contain the Unique ID of the Measurement. The detail provided after the colon allows you to specify *which* unique ID to reference (the scope). You can read more about UID scopes [here](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/). Note that you cannot use the scope of `id` here, as this is reserved for the Citrine Platform. Multiple Measurement UID columns can be specified, but each must have a different UID name (scope).",
"example": "MEASUREMENT UID: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93"
						},
						{
							"name": "MEASUREMENT FILE LINKS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Measurement File Links should contain the filename(s) of file(s) you would like to associate with this Measurement. Note these must be in the same directory as the LinkMaster File (relative paths are not supported). Multiple files can be added by using a comma to separate file names. This will only be recorded in the corresponding Run.",
"example": "MEASUREMENT FILE LINKS|\n---------------|\n20191027_info.txt, 2018_inst_calib.csv|\n\nMEASUREMENT FILE LINKS|\n---------------|\n20190916_output.csv|"
						},
						{
							"name": "MEASUREMENT NOTES",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Measurements Notes should contain free-style text about the Measurement.",
"example": "MEASUREMENT NOTES|\n---------------|\nThis was the first time I ran this measurement, so I may have messed it up.|"
						},
						{
							"name": "MEASUREMENT TAGS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Measurement Tags should contain tags you would like to associate with the Measurement. Read more about tags [here](https://citrineinformatics.github.io/taurus-documentation/specification/tags/)",
"example": "MEASUREMENT TAGS|\n---------------|\ndensity::Archimedes|"
						},
						{
							"name": "PROPERTY NAME",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Property Name should contain the name of the Property. The name of the Property will be the same for the corresponding Object's Spec and Run. **NOTE** A Property Name column is necessary to add a Property to a Measurement. The Property information (e.g Property Notes, Property File Links, etc.) supplied to the *right* of the Property Name column(s) are associated with this Property. A **new** Property can be started by supplying another Property Name column.",
"example": "PROPERTY NAME|\n--------------|\nMelting Point|"
						},
						{
							"name": "PROPERTY TEMPLATE: custom uid name or \"id\"",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Property Template should contain a unique ID of the Property's Template. If this column is not present or if the field is empty, the Property is assumed to not have a Property Template. The detail provided after the colon allows you to specify [*which* unique ID to reference (the scope)](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/); if nothing is provided here it defaults to the Citrine Platform UUID.",
"example": "PROPERTY TEMPLATE: my cool id|\n------------------------------|\nbusiness_unit_389h_bd2b_93|\n\nPROPERTY TEMPLATE|\n------------------|\n725892-v44f3-34t34f-45t45g4"
						},
						{
							"name": "PROPERTY NOTES",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Property Notes should contain free-style text about the Property. This will only be recorded in the corresponding Run.",
"example": "PROPERTY NOTES|\n---------------|\nThe thermocouple reading the Max Temp was being finicky. Not sure how much I trust this value.|"
						},
						{
							"name": "PROPERTY FILE LINKS",
							"style": "list",
							"type": "string",
							"optional": true,
							"description": "The Property File Links should contain the filename(s) of file(s) you would like to associate with this Property. Note these must be in the same directory as the LinkMaster File (relative paths are not supported). Multiple files can be added by using a comma to separate file names. This will only be recorded in the corresponding Run.",
"example": "PROPERTY FILE LINKS|\n---------------|\n20191027_info.txt, 2018_inst_calib.csv|\n\nPROPERTY FILE LINKS|\n---------------|\n20190916_output.csv|"
						},
						{
							"name": "PROPERTY ORIGIN",
							"style": "string",
							"type": "string",
							"optional": true,
							"description": "The Property Origin should contain the origin of said Property. The Value must be one of \u201cmeasured\u201d, \u201cpredicted\u201d, \u201csummary\u201d, \u201cspecified\u201d, \u201ccomputed\u201d, or \u201cunknown.\u201d Default is \u201cunknown.\u201d This will only be recorded in the corresponding Run.",
"example": "PROPERTY ORIGIN|\n---------------|\nmeasured|"
						},
						{
							"name": "PROPERTY VALUE RUN: unit or type",
							"style": "value",
							"type": "string",
							"optional": true,
							"description": "The Property Value Run should contain the value of the *run* of that Property. Units or value type can be provided after a colon, but default to unitless. [Please see value types for more information](#Value-Types). Note that Measurement Spec objects cannot hold Properties, and thus `PROPERTY VALUE SPEC` is not a valid header.",
"example": "PROPERTY VALUE RUN: g|\n---------------|\n4.5|\n\nPROPERTY VALUE RUN|\n---------------|\n5.8 \u00b1 0.4|\n\nPROPERTY VALUE RUN: categorical|\n---------------|\nconvention|"
						}
					]
				}
			]

        },
        {
            "id": 4,
            "title": "Value Types",
            "description":"Value types are sometimes inferred and sometimes specified. [You can learn more about all of the different Value types we support on the Citrine Platform here](https://citrineinformatics.github.io/taurus-documentation/specification/value-types/). Ingredients have special allowed units. [See the details on Ingredient Amounts columns for more information](#ingredient-amounts-spec-unit-or-type).",
            "documents": [
                {
                    "id": 1,
                    "title": "Real Values",
                    "content":"There are three types of Real Values supported: Normal, Nominal and Uniform. All of these three types accept units. If you do not specify a unit, the value is assumed to be unitless.\n\nName| Normal Real\n-----|--------|\nSyntax| mean \u00b1 one standard deviation\nExample header| PARAMETER VALUE SPEC: degC\nExample Value| 100.5 \u00b1 0.3\nExample Value| 100.5 +- 0.3\n\nName| Nominal Real\n-----|--------|\nSyntax| value\nExample header| PARAMETER VALUE SPEC: degC\nExample Value| 100.5\n\nName| Uniform Real\n-----|--------|\nSyntax| [lower, upper]\nExample header| PARAMETER VALUE SPEC: degC\nExample Value| [99.8, 100.3]\n\n"
                },
                {
                    "id": 2,
                    "title": "Integer Values",
                    "content":"There are two types of [Integer Values](https://citrineinformatics.github.io/taurus-documentation/specification/value-types/#integer-values) supported: Nominal and Uniform. Integer values are always unitless, and the type `integer` should be provided. Note that `integer` values cannot be used when defining ingredient amounts because ingredient amounts must be continuous values on the Citrine Platform.\n\nName| Nominal Integer\n-----|--------|\nSyntax| value\nExample header| PARAMETER VALUE SPEC: integer\nExample Value| 7\n\nName| Uniform Integer\n-----|--------|\nSyntax| [lower, upper]\nExample header| PARAMETER VALUE SPEC: integer\nExample Value| [3,8]"
                },
                {
                    "id": 3,
                    "title": "Categorical Values",
                    "content":"There are two types of allowed catagorical values: Nominal and Discrete. Both of these should have the type `categorical` in the column header. \n\nNominal categoricals can simply have a string as the value:\n\nName| Nominal Categorical\n-----|--------|\nSyntax| category\nExample header| PARAMETER VALUE SPEC: categorical\nExample Value| broil\n\nDiscrete Categoricals describe a distribution over categories. For each category with a nonzero probability,\nthe name is provided in quotation marks followed by a colon and its probability. *Note: Probabilities must add up to 1.0.* Different categories are separated by commas, \nwithin curly brackets:\n\nName| Discrete Categorical\n-----|--------|\nSyntax| category\nExample header| PARAMETER VALUE SPEC: categorical\nExample Value| {'category2': 0.7, 'category3': 0.2, 'category5': 0.1}"
                },
                {
                    "id": 4,
                    "title": "Formula Values",
                    "content":"LinkMaster Framework can accept an Empirical Formula. These values should have the type `formula`\n\nName| Empirical Formula\n-----|--------|\nSyntax| formula\nExample header| PROPERTY VALUE SPEC: formula\nExample Value| SiO2"
                }
            ]
        },
		{
			"id": 3,
			"title": "Important Information",
			"documents": [{
					"id": 1,
					"title": "Process Tabs",
					"content": "Process tabs *require* the following column headers:\n\n- INPUT MATERIALS UIDS: LinkMaster ID (unless it is a Process that instantiates a Material such as a purchasing Process)\n- INGREDIENT NAMES (unless it is a Process that instantiates a Material such as a Purchasing Process)\n- PROCESS NAME\n- OUTPUT MATERIAL UID: LinkMaster ID\n- OUTPUT MATERIAL NAME\n"
				},
				{
					"id": 2,
					"title": "Measurement Tabs",
					"content": "Measurement tabs *require* the following column headers:\n\n- INPUT MATERIAL UID: LinkMaster ID\n- MEASUREMENT NAME\n"
				},
				{
					"id": 3,
					"title": "Attributes (Properties, Conditions, or Parameters)",
					"content": "Processes can have many Parameters and Conditions while Measurements can have many Parameters, Conditions, and Properties. Note that the left-to-right order of attribute columns matters; this is described in more detail below. Any time you want to define a Property, Condition, or Property (known collectively as Attributes) within a Process or Measurement you *must* have the following column headers:\n\n- ATTRIBUTE NAME\n    - PARAMETER NAME\n    - CONDITION NAME\n    - PROPERTY NAME\n- ATTRIBUTE VALUE SPEC and/or ATTRIBUTE VALUE RUN\n    - PARAMETER VALUE SPEC and/or PARAMETER VALUE RUN\n    - CONDITION VALUE SPEC and/or CONDITION VALUE NAME\n    - PROPERTY VALUE SPEC and/or PROPERTY VALUE RUN\n\n\nThe all other columns are optional when defining an Attribute."
				},
                {
                    "id": 5,
                    "title": "Reserved or Special UID Scopes",
                    "content": "Scopes allow you to say _which_ unique identifier (UID) you are referring to. [You can read more about scopes here](https://citrineinformatics.github.io/taurus-documentation/specification/unique-identifiers/). There are two special UID scopes: `id` and `LinkMaster ID`.\n\n`id` is the UID scope that Citrine reserves as our platform's object identifier. Because of this, `id` can only be used when referring to a Template. You cannot *assign* a UID with the `id` scope using LinkMaster, you can only _reference_ an _existing_ object using the `id` scope. Thus, this scope can only be used to reference an existing Template in the LinkMaster Framework.\n\n`LinkMaster ID` is the identifier scope used for ingesting your LinkMaster file, and is thus special. These UIDs are the source of the links between the different tabs of your file. As such, the column headers `INPUT MATERIALS UIDS: LinkMaster ID` and `OUTPUT MATERIAL UID: LinkMaster ID` in Process tabs, and the column header `INPUT MATERIAL UID: LinkMaster ID` in Measurement tabs are very important columns. They are described in more detail below."
                }
			]
		}

	]
}